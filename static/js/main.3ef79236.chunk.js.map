{"version":3,"sources":["Assets/Assets.tsx","Portfolios/Portfolios.tsx","DemoArea/DemoArea.tsx","DemoPie/DemoPie.tsx","DemoGauge/DemoGauge.tsx","DemoLiquid/DemoLiquid.tsx","PortfolioMetrics/PortfolioMetrics.tsx","PortfolioMovements/PortfolioMovements.tsx","PortfolioAssets/PortfolioAssets.tsx","PortfolioDetails/PortfolioDetails.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["AssetType","Portfolios","history","useHistory","columns","title","dataIndex","key","render","tags","map","tag","color","length","toUpperCase","id","className","type","icon","PlusCircleOutlined","dataSource","name","description","totalInvested","totalValue","onRow","record","rowIndex","onClick","event","push","onDoubleClick","onContextMenu","onMouseEnter","onMouseLeave","DemoArea","useState","data","setData","useEffect","asyncFetch","fetch","then","response","json","catch","error","console","log","xField","yField","annotations","position","content","offsetY","style","textBaseline","start","end","stroke","lineDash","DemoPie","config","appendPadding","value","angleField","colorField","radius","label","offset","_ref","percent","concat","toString","fontSize","textAlign","interactions","DemoGauge","setPercent","rangeColor","setRangeColor","range","indicator","pointer","pin","axis","formatter","v","Number","subTickLine","count","statistic","toFixed","animation","interval","setInterval","clearInterval","getColor","DemoLiquid","fill","_ref2","lineHeight","liquidStyle","_ref4","Math","min","random","PortfolioMetrics","gutter","justify","overflow","margin","padding","span","bordered","extra","href","Content","Layout","PortfolioMovements","Search","Input","Assets","_","asset","src","alt","width","height","marginRight","marginLeft","sorter","overlay","menu","trigger","e","preventDefault","DownOutlined","price","crypto","hourChange","dayChange","weekChange","marketCap","stock","etf","currency","Item","placeholder","onSearch","enterButton","PortfolioAssets","TabPane","Tabs","PortfolioDetails","tab","setTab","onBack","window","back","subTitle","footer","defaultActiveKey","onChange","b","Header","App","basename","process","theme","mode","defaultSelectedKeys","to","path","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ef79236.chunk.js","sourcesContent":["import './Assets.css';\r\nimport { Table, Input, Menu, Dropdown } from 'antd';\r\nimport React from 'react';\r\nimport { ColumnsType } from 'antd/lib/table';\r\nimport { Content } from 'antd/lib/layout/layout';\r\nimport { DownOutlined } from '@ant-design/icons';\r\n\r\nexport enum AssetType {\r\n  stock,\r\n  etf,\r\n  crypto,\r\n  bond,\r\n  currency,\r\n  thingIdontRemenber\r\n}\r\n\r\nexport interface Asset {\r\n  icon?: string;\r\n  name: string;\r\n  price: number;\r\n  type: AssetType;\r\n  hourChange: number;\r\n  dayChange: number;\r\n  weekChange: number;\r\n  marketCap: number;\r\n}\r\n\r\nconst { Search } = Input;\r\n\r\nconst Assets = () => {\r\n\r\n  const columns: ColumnsType<Asset> = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (_, asset) => {\r\n        if (asset.icon) {\r\n          console.log(asset.icon);\r\n          return <><img src={asset.icon} alt={asset.name + '-icon'} width={20} height={20} style={{ marginRight: 5 }}></img>{asset.name}</>\r\n        } else {\r\n          return <div style={{ marginLeft: 25 }}>{asset.name}</div>\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: 'price',\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n    },\r\n    {\r\n      title: 'type',\r\n      dataIndex: 'type',\r\n      key: 'type',\r\n    },\r\n    {\r\n      title: 'hourChange',\r\n      dataIndex: 'hourChange',\r\n      key: 'hourChange',\r\n      render: (value: number) => <>{value.toFixed(2)} %</>\r\n    },\r\n    {\r\n      title: 'dayChange',\r\n      dataIndex: 'dayChange',\r\n      key: 'dayChange',\r\n      render: (value: number) => <>{value.toFixed(2)} %</>\r\n    },\r\n    {\r\n      title: 'weekChange',\r\n      dataIndex: 'weekChange',\r\n      key: 'weekChange',\r\n      render: (value: number) => <>{value.toFixed(2)} %</>\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      sorter: true,\r\n      render: () => (\r\n\r\n        <Dropdown overlay={menu} trigger={['click']}>\r\n          <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n            Add to portfolio <DownOutlined />\r\n          </a>\r\n        </Dropdown>\r\n\r\n      )\r\n    }\r\n  ];\r\n\r\n  const data: Asset[] = [\r\n    {\r\n      icon: 'https://assets.coingecko.com/coins/images/1/thumb/bitcoin.png',\r\n      name: 'Bitcoin',\r\n      price: Math.random() * 10000,\r\n      type: AssetType.crypto,\r\n      hourChange: Math.random() * 10 - 5,\r\n      dayChange: Math.random() * 10 - 5,\r\n      weekChange: Math.random() * 10 - 5,\r\n      marketCap: Math.random() * 10000000\r\n    },\r\n    {\r\n      icon: 'https://assets.coingecko.com/coins/images/279/thumb/ethereum.png?1595348880',\r\n      name: 'Ethereum',\r\n      price: Math.random() * 100,\r\n      type: AssetType.crypto,\r\n      hourChange: Math.random() * 10 - 5,\r\n      dayChange: Math.random() * 10 - 5,\r\n      weekChange: Math.random() * 10 - 5,\r\n      marketCap: Math.random() * 100000\r\n    },\r\n    {\r\n      icon: 'https://www.tesla.com/sites/all/themes/custom/tesla_theme/assets/img/icons/apple-touch-icon-152x152.png',\r\n      name: 'TSLA',\r\n      price: Math.random() * 100,\r\n      type: AssetType.stock,\r\n      hourChange: Math.random() * 10 - 5,\r\n      dayChange: Math.random() * 10 - 5,\r\n      weekChange: Math.random() * 10 - 5,\r\n      marketCap: Math.random() * 1100000000\r\n    },\r\n    {\r\n      name: 'SP500',\r\n      price: Math.random() * 10000,\r\n      type: AssetType.etf,\r\n      hourChange: Math.random() * 10 - 5,\r\n      dayChange: Math.random() * 10 - 5,\r\n      weekChange: Math.random() * 10 - 5,\r\n      marketCap: Math.random() * 10000000\r\n    },\r\n    {\r\n      name: 'USD',\r\n      price: Math.random() * 1,\r\n      type: AssetType.currency,\r\n      hourChange: Math.random() * 10 - 5,\r\n      dayChange: Math.random() * 10 - 5,\r\n      weekChange: Math.random() * 10 - 5,\r\n      marketCap: Math.random() * 10000000\r\n    },\r\n    {\r\n      name: 'Gold',\r\n      price: Math.random() * 10000,\r\n      type: AssetType.currency,\r\n      hourChange: Math.random() * 10 - 5,\r\n      dayChange: Math.random() * 10 - 5,\r\n      weekChange: Math.random() * 10 - 5,\r\n      marketCap: Math.random() * 10000000\r\n    },\r\n  ];\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <a>Portfolio 1</a>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"1\">\r\n        <a>Portfolio ABC</a>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"3\">\r\n        <a>Portfolio xyz</a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const onSearch = (value: string) => console.log(value);\r\n\r\n  return (\r\n    <Content>\r\n      <div className=\"ip-table-actions\">\r\n        <Search placeholder=\"input search text\" onSearch={onSearch} enterButton />\r\n      </div >\r\n\r\n      <Table columns={columns} dataSource={data} onRow={() => {\r\n        return {\r\n          onClick: () => { }, // click row\r\n          onDoubleClick: () => { }, // double click row\r\n          onContextMenu: () => { }, // right button click row\r\n          onMouseEnter: () => { }, // mouse enter row\r\n          onMouseLeave: () => { }, // mouse leave row\r\n        };\r\n      }} />\r\n    </Content>\r\n  );\r\n\r\n}\r\n\r\nexport default Assets;\r\n","import './Portfolios.css';\r\nimport { Table, Tag, Button } from 'antd';\r\nimport React from 'react';\r\nimport { PlusCircleOutlined } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\ninterface Portfolio {\r\n  name: string;\r\n  description: string;\r\n  totalInvested: number;\r\n  totalValue: number;\r\n  tags: string[];\r\n}\r\n\r\nconst Portfolios = () => {\r\n\r\n  const history = useHistory();\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Description',\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n    },\r\n    {\r\n      title: 'Total invested',\r\n      dataIndex: 'totalInvested',\r\n      key: 'totalInvested',\r\n    },\r\n    {\r\n      title: 'Total value',\r\n      dataIndex: 'totalValue',\r\n      key: 'totalValue',\r\n    },\r\n    {\r\n      title: 'Tags',\r\n      key: 'tags',\r\n      dataIndex: 'tags',\r\n      render: (tags: string[]) => (\r\n        <>\r\n          {tags.map(tag => {\r\n            let color = tag.length > 5 ? 'geekblue' : 'green';\r\n            if (tag === 'loser') {\r\n              color = 'volcano';\r\n            }\r\n            return (\r\n              <Tag color={color} key={tag}>\r\n                {tag.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const data: Portfolio[] = [\r\n    {\r\n      name: 'Crypto',\r\n      description: 'Daily trading with high risk crypto',\r\n      totalInvested: 1000,\r\n      totalValue: 1250,\r\n      tags: ['nice', 'developer'],\r\n    },\r\n    {\r\n      name: 'ETFs',\r\n      description: 'Long term safe ETFs',\r\n      totalInvested: 250,\r\n      totalValue: 240,\r\n      tags: ['loser'],\r\n    },\r\n    {\r\n      name: 'Wall street',\r\n      description: 'Wall street bets like crazy!',\r\n      totalInvested: 8523,\r\n      totalValue: 12025,\r\n      tags: ['cool', 'teacher'],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div id=\"portfolios-container\">\r\n      <div className=\"ip-table-actions\">\r\n        <Button type=\"primary\" icon={<PlusCircleOutlined />}>\r\n          Create new Portfolio\r\n        </Button>\r\n      </div >\r\n\r\n      <Table columns={columns} dataSource={data} onRow={(record, rowIndex) => {\r\n        return {\r\n          onClick: event => { history.push('/portfolios/123') }, // click row\r\n          onDoubleClick: event => { }, // double click row\r\n          onContextMenu: event => { }, // right button click row\r\n          onMouseEnter: event => { }, // mouse enter row\r\n          onMouseLeave: event => { }, // mouse leave row\r\n        };\r\n      }} />\r\n    </div >\r\n  );\r\n\r\n}\r\n\r\nexport default Portfolios;\r\n","import React, { useState, useEffect } from 'react';\nimport { Area } from '@ant-design/charts';\n\nconst DemoArea: React.FC = () => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    asyncFetch();\n  }, []);\n  const asyncFetch = () => {\n    fetch('https://gw.alipayobjects.com/os/bmw-prod/1d565782-dde4-4bb6-8946-ea6a38ccf184.json')\n      .then((response) => response.json())\n      .then((json) => setData(json))\n      .catch((error) => {\n        console.log('fetch data failed', error);\n      });\n  };\n\n  return <Area data={data} xField={'Date'} yField={'scales'} annotations={[{ type: 'text', position: ['min', 'median'], content: 'Bought at', offsetY: -4, style: { textBaseline: 'bottom' }, }, { type: 'line', start: ['min', 'median'], end: ['max', 'median'], style: { stroke: 'red', lineDash: [2, 2], }, }]} />;\n};\n\nexport default DemoArea;\n","import React from 'react';\r\nimport { Pie } from '@ant-design/charts';\r\nimport { PieConfig } from '@ant-design/charts/es/pie';\r\n\r\nconst DemoPie: React.FC = () => {\r\n  const data = [\r\n    {\r\n      type: '分类一',\r\n      value: 27,\r\n    },\r\n    {\r\n      type: '分类二',\r\n      value: 25,\r\n    },\r\n    {\r\n      type: '分类三',\r\n      value: 18,\r\n    },\r\n    {\r\n      type: '分类四',\r\n      value: 15,\r\n    },\r\n    {\r\n      type: '分类五',\r\n      value: 10,\r\n    },\r\n    {\r\n      type: '其他',\r\n      value: 5,\r\n    },\r\n  ];\r\n  const config: PieConfig = {\r\n    appendPadding: 10,\r\n    data: data,\r\n    angleField: 'value',\r\n    colorField: 'type',\r\n    radius: 0.9,\r\n    label: {\r\n      type: 'inner',\r\n      offset: '-30%',\r\n      content: (_ref) => {\r\n        const percent = _ref.percent;\r\n        return ''.concat((percent * 100).toString(), '%');\r\n      },\r\n      style: {\r\n        fontSize: 14,\r\n        textAlign: 'center',\r\n      },\r\n    },\r\n    interactions: [{ type: 'element-active' }],\r\n  };\r\n  return <Pie {...config} />;\r\n};\r\n\r\nexport default DemoPie;","import React, { useState, useEffect } from 'react';\r\nimport { Gauge } from '@ant-design/charts';\r\nimport { GaugeConfig } from '@ant-design/charts/es/gauge';\r\n\r\nconst DemoGauge: React.FC = () => {\r\n\r\n  const [percent, setPercent] = useState(0.2);\r\n  const [rangeColor, setRangeColor] = useState('#F4664A');\r\n  const color = ['#F4664A', '#FAAD14', '#30BF78'];\r\n\r\n  const getColor = (percent: number) => {\r\n    return percent < 0.4 ? color[0] : percent < 0.6 ? color[1] : color[2];\r\n  };\r\n  const config: GaugeConfig = {\r\n    percent,\r\n    range: { color: rangeColor },\r\n    indicator: {\r\n      pointer: { style: { stroke: '#D0D0D0' } },\r\n      pin: { style: { stroke: '#D0D0D0' } },\r\n    },\r\n    axis: {\r\n      label: {\r\n        formatter: function formatter(v) {\r\n          return Number(v) * 100;\r\n        },\r\n      },\r\n      subTickLine: { count: 3 },\r\n    },\r\n    statistic: {\r\n      content: {\r\n        formatter: (_ref: any) => {\r\n          const percent = _ref.percent;\r\n          return 'Rate: '.concat((percent * 100).toFixed(0), '%');\r\n        },\r\n      },\r\n    },\r\n    animation: false,\r\n  };\r\n  useEffect(() => {\r\n    let data = percent;\r\n    const interval = setInterval(function () {\r\n      if (data >= 0.85) {\r\n        clearInterval(interval);\r\n      } else {\r\n        data += 0.095;\r\n        setPercent(data);\r\n        setRangeColor(getColor(data));\r\n      }\r\n    }, 500);\r\n  }, []);\r\n\r\n  return <Gauge style={{ fontSize: 60 }} {...config} />;\r\n};\r\n\r\nexport default DemoGauge;","import React, { useState, useEffect } from 'react';\r\nimport { Liquid } from '@ant-design/charts';\r\nimport { LiquidConfig } from '@ant-design/charts/es/liquid';\r\n\r\nconst DemoLiquid: React.FC = () => {\r\n  const [percent, setPercent] = useState(0.26);\r\n\r\n  const config: LiquidConfig = {\r\n    percent,\r\n    statistic: {\r\n      title: {\r\n        formatter: function formatter() {\r\n          return '盈利率';\r\n        },\r\n        style: (_ref) => {\r\n          const percent = _ref.percent;\r\n          return { fill: percent > 0.65 ? 'white' : 'rgba(44,53,66,0.85)' };\r\n        },\r\n      },\r\n      content: {\r\n        style: (_ref2) => {\r\n          const percent = _ref2.percent;\r\n          return {\r\n            fontSize: '60',\r\n            lineHeight: 1,\r\n            fill: percent > 0.65 ? 'white' : 'rgba(44,53,66,0.85)',\r\n          };\r\n        },\r\n      },\r\n    },\r\n    liquidStyle: (_ref4) => {\r\n      const percent = _ref4.percent;\r\n      return {\r\n        fill: percent > 0.75 ? '#5B8FF9' : '#FAAD14',\r\n        stroke: percent > 0.75 ? '#5B8FF9' : '#FAAD14',\r\n      };\r\n    },\r\n    color: function color() {\r\n      return '#5B8FF9';\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    let data = 0.25;\r\n    const interval = setInterval(function () {\r\n      data += Math.min(Math.random() * 0.1, 0.1);\r\n      if (data < 0.75) {\r\n        setPercent(data);\r\n      } else {\r\n        clearInterval(interval);\r\n      }\r\n    }, 500);\r\n  }, []);\r\n\r\n  return <Liquid {...config} />;\r\n};\r\n\r\nexport default DemoLiquid;","import './PortfolioMetrics.css';\nimport React from 'react';\nimport { Card, Row, Col } from 'antd';\nimport DemoArea from '../DemoArea/DemoArea';\nimport DemoPie from '../DemoPie/DemoPie';\nimport DemoGauge from '../DemoGauge/DemoGauge';\nimport DemoLiquid from '../DemoLiquid/DemoLiquid';\n\n\nconst PortfolioMetrics = () => {\n\n  return (\n    <Row gutter={[32, 32]} justify=\"space-around\" style={{ overflow: 'auto', margin: 0, padding: 16 }}>\n      <Col span={8}>\n        <Card title=\"Target objective\" bordered={false}>\n          <DemoLiquid></DemoLiquid>\n        </Card>\n      </Col>\n      <Col span={8}>\n        <Card title=\"Vromm vrrrommm\" bordered={false}>\n          <DemoGauge></DemoGauge>\n        </Card>\n      </Col>\n      <Col span={8}>\n        <Card title=\"BTC price over time\" extra={<a href=\"https://www.google.com\">More</a>}>\n          <DemoArea></DemoArea>\n        </Card>\n      </Col>\n      <Col span={8}>\n        <Card title=\"Assets things\">\n          <DemoPie></DemoPie>\n        </Card>\n      </Col>\n      <Col span={8}>\n        <Card title=\"BTC price over time\" extra={<a href=\"#\">More</a>}>\n          <DemoArea></DemoArea>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n\nexport default PortfolioMetrics","import './PortfolioMovements.css';\nimport { Table, Tag, Button, Layout } from 'antd';\nimport React from 'react';\nimport { PlusCircleOutlined } from '@ant-design/icons';\n\nconst { Content } = Layout;\n\nconst PortfolioMovements = () => {\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Description',\n      dataIndex: 'description',\n      key: 'description',\n    },\n    {\n      title: 'Total invested',\n      dataIndex: 'totalInvested',\n      key: 'totalInvested',\n    },\n    {\n      title: 'Total value',\n      dataIndex: 'totalValue',\n      key: 'totalValue',\n    },\n    {\n      title: 'Tags',\n      key: 'tags',\n      dataIndex: 'tags',\n      render: (tags: string[]) => (\n        <>\n          {tags.map(tag => {\n            let color = tag.length > 5 ? 'geekblue' : 'green';\n            if (tag === 'loser') {\n              color = 'volcano';\n            }\n            return (\n              <Tag color={color} key={tag}>\n                {tag.toUpperCase()}\n              </Tag>\n            );\n          })}\n        </>\n      ),\n    },\n  ];\n\n  const data: any[] = [\n    {\n      name: 'Crypto',\n      description: 'Daily trading with high risk crypto',\n      totalInvested: 1000,\n      totalValue: 1250,\n      tags: ['nice', 'developer'],\n    },\n    {\n      name: 'ETFs',\n      description: 'Long term safe ETFs',\n      totalInvested: 250,\n      totalValue: 240,\n      tags: ['loser'],\n    },\n    {\n      name: 'Wall street',\n      description: 'Wall street bets like crazy!',\n      totalInvested: 8523,\n      totalValue: 12025,\n      tags: ['cool', 'teacher'],\n    },\n  ];\n\n  return (\n    <Content>\n      <div id=\"portfolios-container\">\n        <div className=\"ip-table-actions\">\n          <Button type=\"primary\" icon={<PlusCircleOutlined />}>\n            Add movement\n          </Button>\n        </div >\n\n        <Table columns={columns} dataSource={data} />\n      </div >\n    </Content>\n  );\n}\n\nexport default PortfolioMovements","import './PortfolioAssets.css';\nimport { Table, Layout, Dropdown } from 'antd';\nimport React from 'react';\nimport menu from 'antd/lib/menu';\nimport { ColumnsType } from 'antd/lib/table';\nimport { Asset, AssetType } from '../Assets/Assets';\n\nconst { Content } = Layout;\n\nconst PortfolioAssets = () => {\n\n  const columns: ColumnsType<Asset> = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (_, asset) => {\n        if (asset.icon) {\n          console.log(asset.icon);\n          return <><img src={asset.icon} alt={asset.name + '-icon'} width={20} height={20} style={{ marginRight: 5 }}></img>{asset.name}</>\n        } else {\n          return <div style={{ marginLeft: 25 }}>{asset.name}</div>\n        }\n      }\n    },\n    {\n      title: 'price',\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: 'type',\n      dataIndex: 'type',\n      key: 'type',\n    },\n  ];\n\n  const data: Asset[] = [\n    {\n      icon: 'https://assets.coingecko.com/coins/images/1/thumb/bitcoin.png',\n      name: 'Bitcoin',\n      price: Math.random() * 10000,\n      type: AssetType.crypto,\n      hourChange: Math.random() * 10 - 5,\n      dayChange: Math.random() * 10 - 5,\n      weekChange: Math.random() * 10 - 5,\n      marketCap: Math.random() * 10000000\n    },\n    {\n      icon: 'https://assets.coingecko.com/coins/images/279/thumb/ethereum.png?1595348880',\n      name: 'Ethereum',\n      price: Math.random() * 100,\n      type: AssetType.crypto,\n      hourChange: Math.random() * 10 - 5,\n      dayChange: Math.random() * 10 - 5,\n      weekChange: Math.random() * 10 - 5,\n      marketCap: Math.random() * 100000\n    },\n    {\n      icon: 'https://www.tesla.com/sites/all/themes/custom/tesla_theme/assets/img/icons/apple-touch-icon-152x152.png',\n      name: 'TSLA',\n      price: Math.random() * 100,\n      type: AssetType.stock,\n      hourChange: Math.random() * 10 - 5,\n      dayChange: Math.random() * 10 - 5,\n      weekChange: Math.random() * 10 - 5,\n      marketCap: Math.random() * 1100000000\n    },\n    {\n      name: 'SP500',\n      price: Math.random() * 10000,\n      type: AssetType.etf,\n      hourChange: Math.random() * 10 - 5,\n      dayChange: Math.random() * 10 - 5,\n      weekChange: Math.random() * 10 - 5,\n      marketCap: Math.random() * 10000000\n    },\n  ];\n\n  return (\n    <Content>\n      <Table columns={columns} dataSource={data} />\n    </Content>\n  );\n\n}\n\nexport default PortfolioAssets","import './PortfolioDetails.css';\nimport React, { useState } from 'react';\nimport { PageHeader, Tabs, Button } from 'antd';\nimport PortfolioMetrics from '../PortfolioMetrics/PortfolioMetrics';\nimport PortfolioMovements from '../PortfolioMovements/PortfolioMovements';\nimport PortfolioAssets from '../PortfolioAssets/PortfolioAssets';\n\n\nconst { TabPane } = Tabs;\n\nconst PortfolioDetails = () => {\n\n\n  const [tab, setTab] = useState('1');\n\n  const callback = (b: string) => { setTab(b) };\n\n\n  return (\n    <>\n      <PageHeader\n        onBack={() => window.history.back()}\n        title=\"Crypto Portfolio\"\n        subTitle=\"This is my crypto hodl\"\n        extra={[\n          <Button key=\"3\">Operation</Button>,\n          <Button key=\"2\">Operation</Button>,\n          <Button key=\"1\" type=\"primary\">Primary</Button>,\n        ]}\n        footer={\n          <Tabs defaultActiveKey=\"1\" onChange={callback}>\n            <TabPane tab=\"Metrics\" key=\"1\" />\n            <TabPane tab=\"Assets\" key=\"2\" />\n            <TabPane tab=\"Movements\" key=\"3\" />\n          </Tabs>\n        }\n      ></PageHeader>\n\n      {tab === '1' ? <PortfolioMetrics /> : (tab === '2' ? <PortfolioAssets /> : <PortfolioMovements />)}\n\n    </>\n  );\n}\n\nexport default PortfolioDetails","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Layout, Menu } from 'antd';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Portfolios from '../Portfolios/Portfolios';\r\nimport PortfolioDetails from '../PortfolioDetails/PortfolioDetails';\r\nimport Assets from '../Assets/Assets';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Layout>\r\n          <Header>\r\n            <div className=\"logo\" />\r\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['portfolios']}>\r\n              <Menu.Item key=\"portfolios\"><Link to=\"/portfolios\">Portfolios</Link></Menu.Item>\r\n              <Menu.Item key=\"assets\"><Link to=\"/assets\">Assets</Link></Menu.Item>\r\n            </Menu>\r\n          </Header>\r\n          <Switch>\r\n            <Route path=\"/portfolios/:portfolioId\">\r\n              <PortfolioDetails />\r\n            </Route>\r\n            <Route path=\"/portfolios\">\r\n              <Content>\r\n                <Portfolios />\r\n              </Content>\r\n            </Route>\r\n            <Route path=\"/assets\">\r\n              <Assets />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              404 not found\r\n              </Route>\r\n          </Switch>\r\n        </Layout >\r\n      </Router >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}